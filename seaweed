//SeaweedFeature.java

package com.novaventure.survivalessentials;

    import com.mojang.serialization.Codec;
    import java.util.Random;

    import com.novaventure.survivalessentials.registry.ModTools.Blocks.BrownKelpBlock;
    import net.minecraft.block.BlockState;
    import net.minecraft.block.Blocks;
    import net.minecraft.util.math.BlockPos;
    import net.minecraft.world.Heightmap;
    import net.minecraft.world.StructureWorldAccess;
    import net.minecraft.world.gen.chunk.ChunkGenerator;
    import net.minecraft.world.gen.feature.*;

    import static com.novaventure.survivalessentials.SurvivalEssentials.*;

public class SeaweedFeature {
    public static ConfiguredFeature<?, ?> OVERWORLD_SEAWEED_KELP_FEATURE = Feature.KELP.configure(new DefaultFeatureConfig());

    public boolean generate(StructureWorldAccess structureWorldAccess, ChunkGenerator chunkGenerator, Random random, BlockPos blockPos, DefaultFeatureConfig defaultFeatureConfig) {
        int i = 0;
        int j = structureWorldAccess.getTopY(Heightmap.Type.OCEAN_FLOOR, blockPos.getX(), blockPos.getZ());
        BlockPos blockPos2 = new BlockPos(blockPos.getX(), j, blockPos.getZ());
        if (structureWorldAccess.getBlockState(blockPos2).isOf(Blocks.WATER)) {
            BlockState blockState = SEAWEED.getDefaultState();
            BlockState blockState2 = SEAWEED_PLANT.getDefaultState();
            int k = 1 + random.nextInt(10);

            for(int l = 0; l <= k; ++l) {
                if (structureWorldAccess.getBlockState(blockPos2).isOf(Blocks.WATER) && structureWorldAccess.getBlockState(blockPos2.up()).isOf(Blocks.WATER) && blockState2.canPlaceAt(structureWorldAccess, blockPos2)) {
                    if (l == k) {
                        structureWorldAccess.setBlockState(blockPos2, (BlockState)blockState.with(BrownKelpBlock.AGE, random.nextInt(4) + 20), 2);
                        ++i;
                    } else {
                        structureWorldAccess.setBlockState(blockPos2, blockState2, 2);
                    }
                } else if (l > 0) {
                    BlockPos blockPos3 = blockPos2.down();
                    if (blockState.canPlaceAt(structureWorldAccess, blockPos3) && !structureWorldAccess.getBlockState(blockPos3.down()).isOf(SEAWEED)) {
                        structureWorldAccess.setBlockState(blockPos3, (BlockState)blockState.with(BrownKelpBlock.AGE, random.nextInt(4) + 20), 2);
                        ++i;
                    }
                    break;
                }

                blockPos2 = blockPos2.up();
            }
        }

        return i > 0;
    }
}

//Main Initializer section

//Obviously theres more in here this is just the relavant code so you dont have to wade through it

import static com.novaventure.survivalessentials.BrownKelpFeature.OVERWORLD_BROWN_KELP_FEATURE;

public class SurvivalEssentials implements ModInitializer {

   @Override
    public void onInitialize() {

     Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "seaweed"), SEAWEED);
     Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "seaweed_plant"), SEAWEED_PLANT);
     Registry.register(Registry.ITEM, new Identifier(MOD_ID, "seaweed"), new BlockItem(SEAWEED, new Item.Settings().group(ItemGroup.FOOD)));
     Registry.register(Registry.ITEM, new Identifier(MOD_ID, "seaweed_plant"), new BlockItem(SEAWEED_PLANT, new Item.Settings()));
    }
    
//SeaweedBlock.java

package com.novaventure.survivalessentials.registry.ModTools.Blocks;

import java.util.Random;

import net.minecraft.block.*;
import net.minecraft.fluid.Fluid;
import net.minecraft.fluid.FluidState;
import net.minecraft.fluid.Fluids;
import net.minecraft.item.ItemPlacementContext;
import net.minecraft.tag.FluidTags;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.shape.VoxelShape;
import net.minecraft.util.shape.VoxelShapes;
import net.minecraft.world.BlockView;
import net.minecraft.world.WorldAccess;
import org.jetbrains.annotations.Nullable;

import static com.novaventure.survivalessentials.SurvivalEssentials.SEAWEED_PLANT;

public class SeaweedBlock extends AbstractPlantStemBlock implements FluidFillable {
    protected static final VoxelShape SHAPE = Block.createCuboidShape(0.0D, 0.0D, 0.0D, 16.0D, 9.0D, 16.0D);

    public SeaweedBlock(Settings settings) {
        super(settings, Direction.UP, SHAPE, true, 0.14D);
    }

    protected boolean chooseStemState(BlockState state) {
        return state.isOf(Blocks.WATER);
    }

    public Block getPlant() {
        return SEAWEED_PLANT;
    }

    protected boolean canAttachTo(Block block) {
        return block != Blocks.MAGMA_BLOCK;
    }

    public boolean canFillWithFluid(BlockView world, BlockPos pos, BlockState state, Fluid fluid) {
        return false;
    }

    public boolean tryFillWithFluid(WorldAccess world, BlockPos pos, BlockState state, FluidState fluidState) {
        return false;
    }

    protected int method_26376(Random random) { return 1; }

    public static final VoxelShape SeaweedPlantBlockShape;
    public static final VoxelShape SeaweedPlantBlockCollisionShape;

    public VoxelShape getOutlineShape(BlockState state, BlockView view, BlockPos pos, ShapeContext context) {
        return SeaweedPlantBlockShape;}

    public VoxelShape getCollisionShape(BlockState state, BlockView view, BlockPos pos, ShapeContext context) {
        return SeaweedPlantBlockCollisionShape;
    }

    static {
        SeaweedPlantBlockShape = Block.createCuboidShape(4.0D, 0.0D, 4.0D, 12.0D, 8.0D, 12.0D);
        SeaweedPlantBlockCollisionShape = VoxelShapes.empty();
    }

    @Nullable
    public BlockState getPlacementState(ItemPlacementContext ctx) {
        FluidState fluidState = ctx.getWorld().getFluidState(ctx.getBlockPos());
        return fluidState.isIn(FluidTags.WATER) && fluidState.getLevel() == 8 ? super.getPlacementState(ctx) : null;
    }

    public FluidState getFluidState(BlockState state) {
        return Fluids.WATER.getStill(false);
    }
}

//SeaweedPlantBlock.java

import net.minecraft.world.WorldAccess;

import static com.novaventure.survivalessentials.SurvivalEssentials.SEAWEED;

public class SeaweedPlantBlock extends AbstractPlantBlock implements FluidFillable {
    public SeaweedPlantBlock(Settings settings) {
        super(settings, Direction.UP, VoxelShapes.fullCube(), true);
    }

    protected AbstractPlantStemBlock getStem() {
        return (AbstractPlantStemBlock) SEAWEED;
    }

    public FluidState getFluidState(BlockState state) {
        return Fluids.WATER.getStill(false);
    }

    public boolean canFillWithFluid(BlockView world, BlockPos pos, BlockState state, Fluid fluid) {
        return false;
    }

    public boolean tryFillWithFluid(WorldAccess world, BlockPos pos, BlockState state, FluidState fluidState) {
        return false;
    }

    public static final VoxelShape SeaweedPlantBlockShape;
    public static final VoxelShape SeaweedPlantBlockCollisionShape;

    public VoxelShape getOutlineShape(BlockState state, BlockView view, BlockPos pos, ShapeContext context) {
        return SeaweedPlantBlockShape;}

    public VoxelShape getCollisionShape(BlockState state, BlockView view, BlockPos pos, ShapeContext context) {
        return SeaweedPlantBlockCollisionShape;
    }

    static {
        SeaweedPlantBlockShape = Block.createCuboidShape(4.0D, 0.0D, 4.0D, 12.0D, 16.0D, 12.0D);
        SeaweedPlantBlockCollisionShape = VoxelShapes.empty();
    }
}
